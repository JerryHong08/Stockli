2025-06-22T08:42:24.088809Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-22T08:42:24.088956Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-22T08:42:24.089121Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-22T08:42:24.089206Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-22T08:42:24.098871Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-22T08:42:24.099144Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-22T08:42:24.099503Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-22T08:42:24.103338Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-22T08:42:24.103395Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-22T08:42:24.105035Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-22T08:42:24.105078Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-22T08:42:24.107341Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-22T08:42:24.107407Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-22T08:42:24.111288Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-22T08:42:24.111545Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-22T08:42:24.111846Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-22T08:42:24.115231Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-22T08:42:24.115301Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-22T08:42:24.116452Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-22T08:42:24.116491Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-22T08:42:30.536125Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"PETZ.US\",\"FRPT.US\",\"IDXX.US\",\"ZTS.US\",\"CHWY.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-22T08:42:30.558448Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"PETZ.US\",\"name_cn\":\"天地荟食品\",\"name_en\":\"TDH Holdings, Inc.\",\"name_hk\":\"天地薈食品\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":10323268,\"circulating_shares\":7128570,\"hk_shares\":0,\"eps\":\"0.2600457529534252\",\"eps_ttm\":\"0.2600457529534252\",\"bps\":\"2.6447673353050604\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"FRPT.US\",\"name_cn\":\"Freshpet\",\"name_en\":\"Freshpet, Inc.\",\"name_hk\":\"Freshpet\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":48777091,\"circulating_shares\":47725598,\"hk_shares\":0,\"eps\":\"0.9620294904425522\",\"eps_ttm\":\"0.3203553077816797\",\"bps\":\"21.5160227574867062\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"IDXX.US\",\"name_cn\":\"IDEXX实验室\",\"name_en\":\"IDEXX Laboratories, Inc.\",\"name_hk\":\"IDEXX實驗室\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":80421917,\"circulating_shares\":79554196,\"hk_shares\":0,\"eps\":\"11.0401123614101365\",\"eps_ttm\":\"11.1283718839977416\",\"bps\":\"18.0052037307193262\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"ZTS.US\",\"name_cn\":\"硕腾\",\"name_en\":\"Zoetis Inc.\",\"name_hk\":\"碩騰\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":445208053,\"circulating_shares\":444391363,\"hk_shares\":0,\"eps\":\"5.5839061832962846\",\"eps_ttm\":\"5.6557826908849737\",\"bps\":\"10.4557857132921178\",\"dividend_yield\":\"1.864\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"CHWY.US\",\"name_cn\":\"\",\"name_en\":\"Chewy, Inc.\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":415210004,\"circulating_shares\":193740101,\"hk_shares\":0,\"eps\":\"0.945877980338836\",\"eps_ttm\":\"0.9350400911823888\",\"bps\":\"0.9046024815914599\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:34.990275Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"PETZ.US\",\"FRPT.US\",\"IDXX.US\",\"ZTS.US\",\"CHWY.US\"]}},\"jsonrpc\":\"2.0\",\"id\":9}"
2025-06-22T08:42:35.017093Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(9)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"PETZ.US\",\"last_done\":\"1.026\",\"prev_close\":\"1.040\",\"open\":\"1.003\",\"high\":\"1.100\",\"low\":\"1.003\",\"timestamp\":\"2025-06-20T20:00:00Z\",\"volume\":3562,\"turnover\":\"3806.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-20T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"1.040\"},\"post_market_quote\":{\"last_done\":\"0.9441\",\"timestamp\":\"2025-06-20T21:19:48Z\",\"volume\":1001,\"turnover\":\"1090.944\",\"high\":\"1.090\",\"low\":\"0.9441\",\"prev_close\":\"1.026\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"FRPT.US\",\"last_done\":\"74.130\",\"prev_close\":\"71.720\",\"open\":\"72.030\",\"high\":\"74.270\",\"low\":\"71.160\",\"timestamp\":\"2025-06-20T20:00:01Z\",\"volume\":1031001,\"turnover\":\"75615829.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-20T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"71.720\"},\"post_market_quote\":{\"last_done\":\"73.630\",\"timestamp\":\"2025-06-20T22:54:37Z\",\"volume\":37259,\"turnover\":\"2762000.225\",\"high\":\"74.130\",\"low\":\"71.210\",\"prev_close\":\"74.130\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"IDXX.US\",\"last_done\":\"523.920\",\"prev_close\":\"519.850\",\"open\":\"519.850\",\"high\":\"525.180\",\"low\":\"517.140\",\"timestamp\":\"2025-06-20T20:00:01Z\",\"volume\":1052500,\"turnover\":\"550160772.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"517.240\",\"timestamp\":\"2025-06-20T13:29:42Z\",\"volume\":412,\"turnover\":\"213166.910\",\"high\":\"519.850\",\"low\":\"516.720\",\"prev_close\":\"519.850\"},\"post_market_quote\":{\"last_done\":\"524.900\",\"timestamp\":\"2025-06-20T20:56:26Z\",\"volume\":175635,\"turnover\":\"92018707.105\",\"high\":\"525.000\",\"low\":\"523.480\",\"prev_close\":\"523.920\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"ZTS.US\",\"last_done\":\"157.170\",\"prev_close\":\"155.060\",\"open\":\"155.570\",\"high\":\"157.700\",\"low\":\"155.000\",\"timestamp\":\"2025-06-20T20:00:00Z\",\"volume\":3296192,\"turnover\":\"516996290.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"155.370\",\"timestamp\":\"2025-06-20T13:28:00Z\",\"volume\":191,\"turnover\":\"29673.108\",\"high\":\"156.370\",\"low\":\"154.850\",\"prev_close\":\"155.060\"},\"post_market_quote\":{\"last_done\":\"157.750\",\"timestamp\":\"2025-06-20T23:51:54Z\",\"volume\":262291,\"turnover\":\"41224141.428\",\"high\":\"157.750\",\"low\":\"156.824\",\"prev_close\":\"157.170\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"CHWY.US\",\"last_done\":\"41.910\",\"prev_close\":\"41.550\",\"open\":\"41.650\",\"high\":\"43.030\",\"low\":\"41.550\",\"timestamp\":\"2025-06-20T20:00:00Z\",\"volume\":12353967,\"turnover\":\"519637311.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"41.730\",\"timestamp\":\"2025-06-20T13:29:59Z\",\"volume\":224059,\"turnover\":\"9310691.443\",\"high\":\"41.940\",\"low\":\"41.250\",\"prev_close\":\"41.550\"},\"post_market_quote\":{\"last_done\":\"42.200\",\"timestamp\":\"2025-06-20T23:46:10Z\",\"volume\":3738590,\"turnover\":\"156688840.572\",\"high\":\"42.250\",\"low\":\"41.543\",\"prev_close\":\"41.910\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:47.210121Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":5,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"PETZ.US\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":10}"
2025-06-22T08:42:47.274346Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(10)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"1.050\",\"open\":\"1.050\",\"low\":\"1.050\",\"high\":\"1.138\",\"volume\":6540,\"turnover\":\"6924.000\",\"timestamp\":\"2025-06-13T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.050\",\"open\":\"0.9950\",\"low\":\"0.9950\",\"high\":\"1.101\",\"volume\":3880,\"turnover\":\"4054.000\",\"timestamp\":\"2025-06-16T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.080\",\"open\":\"1.080\",\"low\":\"1.080\",\"high\":\"1.080\",\"volume\":826,\"turnover\":\"880.000\",\"timestamp\":\"2025-06-17T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.040\",\"open\":\"1.070\",\"low\":\"1.020\",\"high\":\"1.070\",\"volume\":2316,\"turnover\":\"2397.000\",\"timestamp\":\"2025-06-18T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.026\",\"open\":\"1.003\",\"low\":\"1.003\",\"high\":\"1.100\",\"volume\":3562,\"turnover\":\"3806.000\",\"timestamp\":\"2025-06-20T04:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:47.274652Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":5,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"FRPT.US\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":11}"
2025-06-22T08:42:47.340911Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(11)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"74.270\",\"open\":\"76.510\",\"low\":\"73.830\",\"high\":\"78.052\",\"volume\":1542710,\"turnover\":\"116726824.000\",\"timestamp\":\"2025-06-13T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"72.450\",\"open\":\"72.110\",\"low\":\"70.891\",\"high\":\"74.015\",\"volume\":1488035,\"turnover\":\"107596723.000\",\"timestamp\":\"2025-06-16T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"71.920\",\"open\":\"72.140\",\"low\":\"71.510\",\"high\":\"73.380\",\"volume\":652742,\"turnover\":\"47128961.000\",\"timestamp\":\"2025-06-17T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"71.720\",\"open\":\"71.920\",\"low\":\"70.650\",\"high\":\"72.580\",\"volume\":1245742,\"turnover\":\"89193816.000\",\"timestamp\":\"2025-06-18T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"74.130\",\"open\":\"72.030\",\"low\":\"71.160\",\"high\":\"74.270\",\"volume\":1031001,\"turnover\":\"75615829.000\",\"timestamp\":\"2025-06-20T04:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:47.341049Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":5,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"IDXX.US\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":12}"
2025-06-22T08:42:47.404991Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(12)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"522.700\",\"open\":\"520.960\",\"low\":\"519.012\",\"high\":\"526.092\",\"volume\":411465,\"turnover\":\"215187786.000\",\"timestamp\":\"2025-06-13T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"528.770\",\"open\":\"525.910\",\"low\":\"522.420\",\"high\":\"530.120\",\"volume\":371840,\"turnover\":\"196365073.000\",\"timestamp\":\"2025-06-16T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"520.590\",\"open\":\"526.880\",\"low\":\"513.919\",\"high\":\"526.880\",\"volume\":430708,\"turnover\":\"224287246.000\",\"timestamp\":\"2025-06-17T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"519.850\",\"open\":\"518.620\",\"low\":\"515.000\",\"high\":\"524.700\",\"volume\":590939,\"turnover\":\"307601969.000\",\"timestamp\":\"2025-06-18T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"523.920\",\"open\":\"519.850\",\"low\":\"517.140\",\"high\":\"525.180\",\"volume\":1052500,\"turnover\":\"550160772.000\",\"timestamp\":\"2025-06-20T04:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:47.405111Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":5,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"ZTS.US\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":13}"
2025-06-22T08:42:47.470042Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(13)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"164.330\",\"open\":\"164.955\",\"low\":\"163.510\",\"high\":\"167.375\",\"volume\":2973525,\"turnover\":\"490106832.000\",\"timestamp\":\"2025-06-13T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"164.380\",\"open\":\"165.825\",\"low\":\"163.270\",\"high\":\"166.770\",\"volume\":2472945,\"turnover\":\"407135135.000\",\"timestamp\":\"2025-06-16T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"161.670\",\"open\":\"163.860\",\"low\":\"160.900\",\"high\":\"164.325\",\"volume\":2199257,\"turnover\":\"357527098.000\",\"timestamp\":\"2025-06-17T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"155.060\",\"open\":\"157.090\",\"low\":\"154.540\",\"high\":\"158.105\",\"volume\":4662408,\"turnover\":\"726948911.000\",\"timestamp\":\"2025-06-18T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"157.170\",\"open\":\"155.570\",\"low\":\"155.000\",\"high\":\"157.700\",\"volume\":3296192,\"turnover\":\"516996290.000\",\"timestamp\":\"2025-06-20T04:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-22T08:42:47.470161Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":5,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"CHWY.US\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":14}"
2025-06-22T08:42:47.534040Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(14)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"41.670\",\"open\":\"41.070\",\"low\":\"41.070\",\"high\":\"41.980\",\"volume\":7210988,\"turnover\":\"299840817.000\",\"timestamp\":\"2025-06-13T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"41.660\",\"open\":\"41.990\",\"low\":\"41.500\",\"high\":\"42.480\",\"volume\":5765948,\"turnover\":\"241461534.000\",\"timestamp\":\"2025-06-16T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"41.510\",\"open\":\"41.710\",\"low\":\"41.340\",\"high\":\"42.643\",\"volume\":5517772,\"turnover\":\"230530973.000\",\"timestamp\":\"2025-06-17T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"41.550\",\"open\":\"41.830\",\"low\":\"41.025\",\"high\":\"42.030\",\"volume\":4790450,\"turnover\":\"198846846.000\",\"timestamp\":\"2025-06-18T04:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"41.910\",\"open\":\"41.650\",\"low\":\"41.550\",\"high\":\"43.030\",\"volume\":12353967,\"turnover\":\"519637311.000\",\"timestamp\":\"2025-06-20T04:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
