2025-06-16T08:42:08.011514Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-16T08:42:08.011641Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-16T08:42:08.011741Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-16T08:42:08.011777Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T08:42:08.018469Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T08:42:08.018567Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-16T08:42:08.018799Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T08:42:08.020986Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-16T08:42:08.021011Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T08:42:08.021882Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-16T08:42:08.021904Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T08:42:08.022597Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-16T08:42:08.022643Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T08:42:08.023756Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T08:42:08.023940Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-16T08:42:08.024132Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T08:42:08.025519Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-16T08:42:08.025543Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T08:42:08.026260Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-16T08:42:08.026282Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T08:42:12.189099Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"TSLA.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-16T08:42:12.203908Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"TSLA.US\",\"last_done\":\"325.310\",\"prev_close\":\"319.110\",\"open\":\"313.970\",\"high\":\"332.990\",\"low\":\"313.300\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":128964279,\"turnover\":\"41734126083.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"331.330\",\"timestamp\":\"2025-06-16T08:42:05Z\",\"volume\":112068,\"turnover\":\"37159961.060\",\"high\":\"332.070\",\"low\":\"330.300\",\"prev_close\":\"325.310\"},\"post_market_quote\":{\"last_done\":\"326.920\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":1484102,\"turnover\":\"483126670.475\",\"high\":\"327.250\",\"low\":\"324.290\",\"prev_close\":\"325.310\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T09:11:00.126701Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-16T09:11:00.130856Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-16T09:11:00.131001Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-16T09:11:00.131096Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T09:11:00.135461Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T09:11:00.135628Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-16T09:11:00.135887Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T09:11:00.138246Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-16T09:11:00.138269Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T09:11:00.139091Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-16T09:11:00.139103Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T09:11:00.140091Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-16T09:11:00.140135Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T09:11:00.141020Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T09:11:00.141109Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-16T09:11:00.141340Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T09:11:00.142765Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-16T09:11:00.142785Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T09:11:00.143550Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-16T09:11:00.143573Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T09:11:05.504777Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"TSLA.US\",\"QS.US\",\"ENPH.US\",\"PLUG.US\",\"NKLA.US\",\"LCID.US\",\"RIVN.US\",\"BLNK.US\",\"SEDG.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-16T09:11:05.526223Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"TSLA.US\",\"name_cn\":\"特斯拉\",\"name_en\":\"Tesla, Inc.\",\"name_hk\":\"特斯拉\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":3220956211,\"circulating_shares\":2803291276,\"hk_shares\":0,\"eps\":\"2.2136283553468029\",\"eps_ttm\":\"1.8960208087100877\",\"bps\":\"23.1772787674200393\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"QS.US\",\"name_cn\":\"\",\"name_en\":\"QuantumScape Corporation\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":558926283,\"circulating_shares\":422484161,\"hk_shares\":0,\"eps\":\"-0.8549553215410341\",\"eps_ttm\":\"-0.8438178957492325\",\"bps\":\"1.9834422422393044\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"ENPH.US\",\"name_cn\":\"Enphase 能源\",\"name_en\":\"Enphase Energy, Inc.\",\"name_hk\":\"Enphase 能源\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":131207018,\"circulating_shares\":126957196,\"hk_shares\":0,\"eps\":\"0.7824124163846175\",\"eps_ttm\":\"1.1316848920383207\",\"bps\":\"6.1787701020687781\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PLUG.US\",\"name_cn\":\"普拉格能源\",\"name_en\":\"Plug Power Inc.\",\"name_hk\":\"普拉格能源\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":1126302289,\"circulating_shares\":994960912,\"hk_shares\":0,\"eps\":\"-1.8686821651305372\",\"eps_ttm\":\"-1.7806773719519627\",\"bps\":\"1.6489356526558564\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"NKLA.US\",\"name_cn\":\"Nikola\",\"name_en\":\"Nikola Corporation\",\"name_hk\":\"Nikola\",\"exchange\":\"OTC\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":84467751,\"circulating_shares\":84007080,\"hk_shares\":0,\"eps\":\"-36.3\",\"eps_ttm\":\"-14.248078\",\"bps\":\"6.860034\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"LCID.US\",\"name_cn\":\"\",\"name_en\":\"Lucid Group, Inc.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":3050262035,\"circulating_shares\":1233068122,\"hk_shares\":0,\"eps\":\"-1.0037013098777922\",\"eps_ttm\":\"-1.018892135934151\",\"bps\":\"1.0437381980528765\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"RIVN.US\",\"name_cn\":\"Rivian Automotive\",\"name_en\":\"Rivian Automotive, Inc.\",\"name_hk\":\"Rivian Automotive\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":1146424873,\"circulating_shares\":869798741,\"hk_shares\":0,\"eps\":\"-4.1406987163301018\",\"eps_ttm\":\"-3.3547771777976768\",\"bps\":\"5.4273072283559919\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"BLNK.US\",\"name_cn\":\"\",\"name_en\":\"Blink Charging Co.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":102717131,\"circulating_shares\":101533500,\"hk_shares\":0,\"eps\":\"-1.928909015186571\",\"eps_ttm\":\"-1.9633141817405317\",\"bps\":\"0.9988888805704669\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"SEDG.US\",\"name_cn\":\"SolarEdge 技术\",\"name_en\":\"SolarEdge Technologies, Inc.\",\"name_hk\":\"SolarEdge 技術\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":59044232,\"circulating_shares\":57632525,\"hk_shares\":0,\"eps\":\"-30.5932847089957915\",\"eps_ttm\":\"-29.5976243708276195\",\"bps\":\"10.0638619535266375\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
