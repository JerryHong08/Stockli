2025-06-16T08:42:08.011514Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-16T08:42:08.011641Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-16T08:42:08.011741Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-16T08:42:08.011777Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T08:42:08.018469Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T08:42:08.018567Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-16T08:42:08.018799Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T08:42:08.020986Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-16T08:42:08.021011Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T08:42:08.021882Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-16T08:42:08.021904Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T08:42:08.022597Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-16T08:42:08.022643Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T08:42:08.023756Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T08:42:08.023940Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-16T08:42:08.024132Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T08:42:08.025519Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-16T08:42:08.025543Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T08:42:08.026260Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-16T08:42:08.026282Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T08:42:12.189099Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"TSLA.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-16T08:42:12.203908Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"TSLA.US\",\"last_done\":\"325.310\",\"prev_close\":\"319.110\",\"open\":\"313.970\",\"high\":\"332.990\",\"low\":\"313.300\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":128964279,\"turnover\":\"41734126083.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"331.330\",\"timestamp\":\"2025-06-16T08:42:05Z\",\"volume\":112068,\"turnover\":\"37159961.060\",\"high\":\"332.070\",\"low\":\"330.300\",\"prev_close\":\"325.310\"},\"post_market_quote\":{\"last_done\":\"326.920\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":1484102,\"turnover\":\"483126670.475\",\"high\":\"327.250\",\"low\":\"324.290\",\"prev_close\":\"325.310\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T09:11:00.126701Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-16T09:11:00.130856Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-16T09:11:00.131001Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-16T09:11:00.131096Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T09:11:00.135461Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T09:11:00.135628Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-16T09:11:00.135887Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T09:11:00.138246Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-16T09:11:00.138269Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T09:11:00.139091Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-16T09:11:00.139103Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T09:11:00.140091Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-16T09:11:00.140135Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T09:11:00.141020Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T09:11:00.141109Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-16T09:11:00.141340Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T09:11:00.142765Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-16T09:11:00.142785Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T09:11:00.143550Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-16T09:11:00.143573Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T09:11:05.504777Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"TSLA.US\",\"QS.US\",\"ENPH.US\",\"PLUG.US\",\"NKLA.US\",\"LCID.US\",\"RIVN.US\",\"BLNK.US\",\"SEDG.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-16T09:11:05.526223Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"TSLA.US\",\"name_cn\":\"特斯拉\",\"name_en\":\"Tesla, Inc.\",\"name_hk\":\"特斯拉\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":3220956211,\"circulating_shares\":2803291276,\"hk_shares\":0,\"eps\":\"2.2136283553468029\",\"eps_ttm\":\"1.8960208087100877\",\"bps\":\"23.1772787674200393\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"QS.US\",\"name_cn\":\"\",\"name_en\":\"QuantumScape Corporation\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":558926283,\"circulating_shares\":422484161,\"hk_shares\":0,\"eps\":\"-0.8549553215410341\",\"eps_ttm\":\"-0.8438178957492325\",\"bps\":\"1.9834422422393044\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"ENPH.US\",\"name_cn\":\"Enphase 能源\",\"name_en\":\"Enphase Energy, Inc.\",\"name_hk\":\"Enphase 能源\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":131207018,\"circulating_shares\":126957196,\"hk_shares\":0,\"eps\":\"0.7824124163846175\",\"eps_ttm\":\"1.1316848920383207\",\"bps\":\"6.1787701020687781\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PLUG.US\",\"name_cn\":\"普拉格能源\",\"name_en\":\"Plug Power Inc.\",\"name_hk\":\"普拉格能源\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":1126302289,\"circulating_shares\":994960912,\"hk_shares\":0,\"eps\":\"-1.8686821651305372\",\"eps_ttm\":\"-1.7806773719519627\",\"bps\":\"1.6489356526558564\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"NKLA.US\",\"name_cn\":\"Nikola\",\"name_en\":\"Nikola Corporation\",\"name_hk\":\"Nikola\",\"exchange\":\"OTC\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":84467751,\"circulating_shares\":84007080,\"hk_shares\":0,\"eps\":\"-36.3\",\"eps_ttm\":\"-14.248078\",\"bps\":\"6.860034\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"LCID.US\",\"name_cn\":\"\",\"name_en\":\"Lucid Group, Inc.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":3050262035,\"circulating_shares\":1233068122,\"hk_shares\":0,\"eps\":\"-1.0037013098777922\",\"eps_ttm\":\"-1.018892135934151\",\"bps\":\"1.0437381980528765\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"RIVN.US\",\"name_cn\":\"Rivian Automotive\",\"name_en\":\"Rivian Automotive, Inc.\",\"name_hk\":\"Rivian Automotive\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":1146424873,\"circulating_shares\":869798741,\"hk_shares\":0,\"eps\":\"-4.1406987163301018\",\"eps_ttm\":\"-3.3547771777976768\",\"bps\":\"5.4273072283559919\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"BLNK.US\",\"name_cn\":\"\",\"name_en\":\"Blink Charging Co.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":102717131,\"circulating_shares\":101533500,\"hk_shares\":0,\"eps\":\"-1.928909015186571\",\"eps_ttm\":\"-1.9633141817405317\",\"bps\":\"0.9988888805704669\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"SEDG.US\",\"name_cn\":\"SolarEdge 技术\",\"name_en\":\"SolarEdge Technologies, Inc.\",\"name_hk\":\"SolarEdge 技術\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":59044232,\"circulating_shares\":57632525,\"hk_shares\":0,\"eps\":\"-30.5932847089957915\",\"eps_ttm\":\"-29.5976243708276195\",\"bps\":\"10.0638619535266375\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:04:31.939800Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-16T11:04:31.942759Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-16T11:04:31.942970Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-16T11:04:31.943064Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T11:04:31.953163Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T11:04:31.953924Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-16T11:04:31.955018Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T11:04:31.962659Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-16T11:04:31.962746Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T11:04:31.965607Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-16T11:04:31.965719Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T11:04:31.968141Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-16T11:04:31.968300Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-16T11:04:31.970552Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-16T11:04:31.971029Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-16T11:04:31.971790Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-16T11:04:31.976752Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-16T11:04:31.976796Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-16T11:04:31.978237Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-16T11:04:31.978296Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-16T11:04:35.759042Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"now\",\"arguments\":{}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-16T11:04:35.759123Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("2025-06-16T11:04:35.7591118Z"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:04:40.141105Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"trading_days\",\"arguments\":{\"end_date\":\"2025-06-13\",\"market\":\"CN\",\"start_date\":\"2025-06-09\"}},\"jsonrpc\":\"2.0\",\"id\":9}"
2025-06-16T11:04:40.158405Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(9)), result: Some(Object {"content": Array [Object {"text": String("{\"trading_days\":[\"2025-06-09\",\"2025-06-10\",\"2025-06-11\",\"2025-06-12\",\"2025-06-13\"],\"half_trading_days\":[]}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:04:47.058201Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"600111.SH\",\"600392.SH\",\"600366.SH\",\"000831.SZ\",\"002056.SZ\",\"600549.SH\",\"600980.SH\",\"600259.SH\",\"600010.SH\",\"600058.SH\"]}},\"jsonrpc\":\"2.0\",\"id\":10}"
2025-06-16T11:04:47.079806Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(10)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"600111.SH\",\"name_cn\":\"北方稀土\",\"name_en\":\"CNRE\",\"name_hk\":\"北方稀土\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":3615065842,\"circulating_shares\":3615065842,\"hk_shares\":0,\"eps\":\"0.2778032173639177\",\"eps_ttm\":\"0.3825246634830171\",\"bps\":\"6.3263666993011852\",\"dividend_yield\":\"0.07\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600392.SH\",\"name_cn\":\"盛和资源\",\"name_en\":\"SHRC\",\"name_hk\":\"盛和資源\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1752826570,\"circulating_shares\":1752826570,\"hk_shares\":0,\"eps\":\"0.1182070465362697\",\"eps_ttm\":\"0.3372281832366336\",\"bps\":\"5.5158120454381291\",\"dividend_yield\":\"0.07\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600366.SH\",\"name_cn\":\"宁波韵升\",\"name_en\":\"Yunsheng\",\"name_hk\":\"寧波韻升\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1099041051,\"circulating_shares\":1063042036,\"hk_shares\":0,\"eps\":\"0.0865113826762782\",\"eps_ttm\":\"0.1207676990402063\",\"bps\":\"5.398487543210067\",\"dividend_yield\":\"0.0501307503481051\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"000831.SZ\",\"name_cn\":\"中国稀土\",\"name_en\":\"ZGXT\",\"name_hk\":\"中國稀土\",\"exchange\":\"SZSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1061220807,\"circulating_shares\":1061220807,\"hk_shares\":0,\"eps\":\"-0.2703557517601518\",\"eps_ttm\":\"0.07017508925454\",\"bps\":\"4.4452632685423779\",\"dividend_yield\":\"0.08\",\"stock_derivatives\":\"\",\"board\":\"SZMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"002056.SZ\",\"name_cn\":\"横店东磁\",\"name_en\":\"DMEGC\",\"name_hk\":\"橫店東磁\",\"exchange\":\"SZSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1626712074,\"circulating_shares\":1626712074,\"hk_shares\":0,\"eps\":\"1.1229852117271492\",\"eps_ttm\":\"1.1873855359236732\",\"bps\":\"6.4653627710456153\",\"dividend_yield\":\"0.4451361979563201\",\"stock_derivatives\":\"\",\"board\":\"SZMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600549.SH\",\"name_cn\":\"厦门钨业\",\"name_en\":\"XTC\",\"name_hk\":\"廈門鎢業\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1587585826,\"circulating_shares\":1553931980,\"hk_shares\":0,\"eps\":\"1.0884033344286106\",\"eps_ttm\":\"1.0656531811150095\",\"bps\":\"10.2730572754496235\",\"dividend_yield\":\"0.42\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600980.SH\",\"name_cn\":\"北矿科技\",\"name_en\":\"BGRIMM Tec\",\"name_hk\":\"北礦科技\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":189263526,\"circulating_shares\":175677206,\"hk_shares\":0,\"eps\":\"0.5590993075971754\",\"eps_ttm\":\"0.5649890507165126\",\"bps\":\"7.4626514447374292\",\"dividend_yield\":\"0.1819999999894327\",\"stock_derivatives\":\"\",\"board\":\"SHMainNonConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600259.SH\",\"name_cn\":\"广晟有色\",\"name_en\":\"Rnm\",\"name_hk\":\"廣晟有色\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":336435910,\"circulating_shares\":336435910,\"hk_shares\":0,\"eps\":\"-0.8872528138866032\",\"eps_ttm\":\"0.1567051307335177\",\"bps\":\"10.1326316746627909\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600010.SH\",\"name_cn\":\"包钢股份\",\"name_en\":\"BSU\",\"name_hk\":\"包鋼股份\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":45288619348,\"circulating_shares\":31380798287,\"hk_shares\":0,\"eps\":\"0.0058431716349438\",\"eps_ttm\":\"0.0054311072951899\",\"bps\":\"1.147344064314133\",\"dividend_yield\":\"0.002\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"600058.SH\",\"name_cn\":\"五矿发展\",\"name_en\":\"MINLIST\",\"name_hk\":\"五礦發展\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":1071910711,\"circulating_shares\":1071910711,\"hk_shares\":0,\"eps\":\"0.117223919203845\",\"eps_ttm\":\"0.2802642120533862\",\"bps\":\"4.6419625795119049\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.214111Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600111.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":11}"
2025-06-16T11:05:09.275907Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(11)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"25.47\",\"open\":\"25.08\",\"low\":\"24.88\",\"high\":\"25.73\",\"volume\":979385,\"turnover\":\"2487123152.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.276621Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600392.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":12}"
2025-06-16T11:05:09.340137Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(12)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"13.67\",\"open\":\"13.22\",\"low\":\"13.22\",\"high\":\"13.97\",\"volume\":1166770,\"turnover\":\"1600680526.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.340278Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600366.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":13}"
2025-06-16T11:05:09.398442Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(13)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"11.60\",\"open\":\"10.61\",\"low\":\"10.28\",\"high\":\"11.90\",\"volume\":2671538,\"turnover\":\"2986093997.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.398611Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"000831.SZ\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":14}"
2025-06-16T11:05:09.457869Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(14)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"36.99\",\"open\":\"35.60\",\"low\":\"35.53\",\"high\":\"37.50\",\"volume\":666912,\"turnover\":\"2452775427.10\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.457983Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"002056.SZ\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":15}"
2025-06-16T11:05:09.521341Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(15)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"14.11\",\"open\":\"14.11\",\"low\":\"14.00\",\"high\":\"14.30\",\"volume\":349656,\"turnover\":\"494201179.87\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.521494Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600549.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":16}"
2025-06-16T11:05:09.712126Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(16)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"21.03\",\"open\":\"20.71\",\"low\":\"20.63\",\"high\":\"21.18\",\"volume\":355322,\"turnover\":\"745522591.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.712284Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600980.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":17}"
2025-06-16T11:05:09.776438Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(17)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"29.00\",\"open\":\"27.37\",\"low\":\"26.80\",\"high\":\"30.28\",\"volume\":667556,\"turnover\":\"1913464389.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.776594Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600259.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":18}"
2025-06-16T11:05:09.886298Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(18)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"61.38\",\"open\":\"55.00\",\"low\":\"55.00\",\"high\":\"61.38\",\"volume\":496073,\"turnover\":\"2976312723.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.886474Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600058.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":19}"
2025-06-16T11:05:09.958110Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(19)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"7.62\",\"open\":\"7.45\",\"low\":\"7.45\",\"high\":\"7.91\",\"volume\":179505,\"turnover\":\"138242539.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:05:09.958301Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":1,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600010.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":20}"
2025-06-16T11:05:10.043144Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(20)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"1.82\",\"open\":\"1.81\",\"low\":\"1.80\",\"high\":\"1.85\",\"volume\":3310836,\"turnover\":\"603363810.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:17:16.139952Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"REMX.US\",\"MP.US\",\"LYC.AU\",\"LAC.US\",\"REE.US\",\"AVL.TO\",\"AREC.US\",\"UAMY.US\",\"NEO.TO\",\"PLL.US\"]}},\"jsonrpc\":\"2.0\",\"id\":21}"
2025-06-16T11:17:16.159384Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(21)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"REMX.US\",\"name_cn\":\"稀土战略金属指数 ETF - VanEck Vectors\",\"name_en\":\"VanEck Rare Earth & Strat Mtls ETF\",\"name_hk\":\"稀土戰略金屬指數 ETF - VanEck Vectors\",\"exchange\":\"AMEX\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":7324987,\"circulating_shares\":7324987,\"hk_shares\":0,\"eps\":\"0\",\"eps_ttm\":\"0\",\"bps\":\"0\",\"dividend_yield\":\"0.9971\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"MP.US\",\"name_cn\":\"\",\"name_en\":\"MP Materials Corp.\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":163456298,\"circulating_shares\":119914547,\"hk_shares\":0,\"eps\":\"-0.4002537730299019\",\"eps_ttm\":\"-0.6396878020570367\",\"bps\":\"6.3387646280842602\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"LAC.US\",\"name_cn\":\"\",\"name_en\":\"Lithium Americas Corp.\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":218904876,\"circulating_shares\":184764186,\"hk_shares\":0,\"eps\":\"-0.1942761658721572\",\"eps_ttm\":\"-0.2145498120379922\",\"bps\":\"2.8574055152613412\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"REE.US\",\"name_cn\":\"\",\"name_en\":\"REE Automotive Ltd.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":28240362,\"circulating_shares\":17857965,\"hk_shares\":0,\"eps\":\"-3.957243890853807\",\"eps_ttm\":\"-3.957243890853807\",\"bps\":\"0.8189696718476909\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"AREC.US\",\"name_cn\":\"\",\"name_en\":\"American Resources Corporation\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":82274703,\"circulating_shares\":61490163,\"hk_shares\":0,\"eps\":\"-0.4875001007296252\",\"eps_ttm\":\"-0.4839923396624112\",\"bps\":\"-1.0323721375208124\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"UAMY.US\",\"name_cn\":\"\",\"name_en\":\"United States Antimony Corporation\",\"name_hk\":\"\",\"exchange\":\"AMEX\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":117922971,\"circulating_shares\":90986758,\"hk_shares\":0,\"eps\":\"-0.0147376205438379\",\"eps_ttm\":\"-0.0073659270338431\",\"bps\":\"0.2762994921489894\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PLL.US\",\"name_cn\":\"\",\"name_en\":\"Piedmont Lithium Inc.\",\"name_hk\":\"\",\"exchange\":\"NASD\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":2194606900,\"circulating_shares\":2053176336,\"hk_shares\":0,\"eps\":\"-0.0295091571980385\",\"eps_ttm\":\"-0.025872970690104\",\"bps\":\"0.1290850766941451\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-16T11:17:25.621998Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"REMX.US\",\"MP.US\",\"LAC.US\",\"REE.US\",\"AREC.US\",\"UAMY.US\",\"PLL.US\"]}},\"jsonrpc\":\"2.0\",\"id\":22}"
2025-06-16T11:17:25.642369Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(22)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"REMX.US\",\"last_done\":\"39.640\",\"prev_close\":\"39.750\",\"open\":\"39.670\",\"high\":\"39.930\",\"low\":\"39.400\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":64596,\"turnover\":\"2560758.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-16T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"39.640\"},\"post_market_quote\":{\"last_done\":\"39.500\",\"timestamp\":\"2025-06-13T23:35:56Z\",\"volume\":316,\"turnover\":\"12504.710\",\"high\":\"39.640\",\"low\":\"39.500\",\"prev_close\":\"39.640\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"MP.US\",\"last_done\":\"30.550\",\"prev_close\":\"29.200\",\"open\":\"29.840\",\"high\":\"30.780\",\"low\":\"28.355\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":25329263,\"turnover\":\"760096043.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"31.620\",\"timestamp\":\"2025-06-16T11:15:33Z\",\"volume\":25502,\"turnover\":\"809293.390\",\"high\":\"31.910\",\"low\":\"31.510\",\"prev_close\":\"30.550\"},\"post_market_quote\":{\"last_done\":\"30.910\",\"timestamp\":\"2025-06-13T23:59:52Z\",\"volume\":2138511,\"turnover\":\"65347612.294\",\"high\":\"31.000\",\"low\":\"30.340\",\"prev_close\":\"30.550\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"LAC.US\",\"last_done\":\"2.650\",\"prev_close\":\"2.630\",\"open\":\"2.600\",\"high\":\"2.680\",\"low\":\"2.561\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":3748950,\"turnover\":\"9893608.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-16T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"2.650\"},\"post_market_quote\":{\"last_done\":\"2.680\",\"timestamp\":\"2025-06-13T23:59:39Z\",\"volume\":26168,\"turnover\":\"69609.074\",\"high\":\"2.680\",\"low\":\"2.620\",\"prev_close\":\"2.650\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"REE.US\",\"last_done\":\"0.6305\",\"prev_close\":\"0.6920\",\"open\":\"0.6950\",\"high\":\"0.7000\",\"low\":\"0.6156\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":391841,\"turnover\":\"254544.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-16T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"0.6305\"},\"post_market_quote\":{\"last_done\":\"0.6600\",\"timestamp\":\"2025-06-13T23:41:39Z\",\"volume\":872,\"turnover\":\"572.116\",\"high\":\"0.6750\",\"low\":\"0.6201\",\"prev_close\":\"0.6305\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"AREC.US\",\"last_done\":\"0.8715\",\"prev_close\":\"0.7810\",\"open\":\"0.7700\",\"high\":\"0.9100\",\"low\":\"0.7311\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":3046574,\"turnover\":\"2573626.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0.9000\",\"timestamp\":\"2025-06-16T08:13:10Z\",\"volume\":1092,\"turnover\":\"986.723\",\"high\":\"0.9099\",\"low\":\"0.9000\",\"prev_close\":\"0.8715\"},\"post_market_quote\":{\"last_done\":\"0.8399\",\"timestamp\":\"2025-06-13T23:57:21Z\",\"volume\":20509,\"turnover\":\"17709.648\",\"high\":\"0.8800\",\"low\":\"0.8399\",\"prev_close\":\"0.8715\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"UAMY.US\",\"last_done\":\"2.930\",\"prev_close\":\"3.020\",\"open\":\"2.980\",\"high\":\"3.050\",\"low\":\"2.880\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":2700270,\"turnover\":\"8014885.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"2.970\",\"timestamp\":\"2025-06-16T11:00:00Z\",\"volume\":1173,\"turnover\":\"3460.180\",\"high\":\"2.970\",\"low\":\"2.930\",\"prev_close\":\"2.930\"},\"post_market_quote\":{\"last_done\":\"2.910\",\"timestamp\":\"2025-06-13T23:50:25Z\",\"volume\":7556,\"turnover\":\"22073.015\",\"high\":\"2.950\",\"low\":\"2.900\",\"prev_close\":\"2.930\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PLL.US\",\"last_done\":\"6.060\",\"prev_close\":\"6.230\",\"open\":\"6.110\",\"high\":\"6.210\",\"low\":\"6.020\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":163125,\"turnover\":\"994066.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-16T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"6.060\"},\"post_market_quote\":{\"last_done\":\"6.168\",\"timestamp\":\"2025-06-13T23:32:45Z\",\"volume\":3673,\"turnover\":\"22285.656\",\"high\":\"6.220\",\"low\":\"6.060\",\"prev_close\":\"6.060\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
