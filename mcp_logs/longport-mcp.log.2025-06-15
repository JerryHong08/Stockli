2025-06-15T11:13:33.479236Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:13:33.479436Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:13:33.479677Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:13:33.479819Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:13:33.486778Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:13:33.486991Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:13:33.487343Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:13:33.489976Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:13:33.490007Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:13:33.491059Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:13:33.491082Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:13:33.491836Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:13:33.491859Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:13:33.492829Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:13:33.493127Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:13:33.493330Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:13:33.495423Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:13:33.495450Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:13:33.496101Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:13:33.496121Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:13:38.448756Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"TSLA.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-15T11:13:38.524887Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"TSLA.US\",\"last_done\":\"325.310\",\"prev_close\":\"319.110\",\"open\":\"313.970\",\"high\":\"332.990\",\"low\":\"313.300\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":128964279,\"turnover\":\"41734126083.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"313.840\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":1860230,\"turnover\":\"582939014.932\",\"high\":\"316.850\",\"low\":\"309.450\",\"prev_close\":\"319.110\"},\"post_market_quote\":{\"last_done\":\"326.920\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":1484102,\"turnover\":\"483126670.475\",\"high\":\"327.250\",\"low\":\"324.290\",\"prev_close\":\"325.310\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-15T11:15:03.834880Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:15:03.834962Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:15:03.835141Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:15:03.835231Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:15:03.837492Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:15:03.837638Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:15:03.837911Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:15:03.840873Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:15:03.840896Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:15:03.841873Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:15:03.841895Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:15:03.842784Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:15:03.842814Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:15:03.843849Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:15:03.844041Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:15:03.844222Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:15:03.845595Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:15:03.845617Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:15:03.846346Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:15:03.846366Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:15:07.876129Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"BURU.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-15T11:15:07.948973Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"BURU.US\",\"last_done\":\"0.3198\",\"prev_close\":\"0.3222\",\"open\":\"0.3044\",\"high\":\"0.3290\",\"low\":\"0.2890\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":7595085,\"turnover\":\"2330513.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0.3010\",\"timestamp\":\"2025-06-13T13:29:12Z\",\"volume\":232119,\"turnover\":\"70273.585\",\"high\":\"0.3082\",\"low\":\"0.3000\",\"prev_close\":\"0.3222\"},\"post_market_quote\":{\"last_done\":\"0.3350\",\"timestamp\":\"2025-06-13T23:59:57Z\",\"volume\":400758,\"turnover\":\"128678.827\",\"high\":\"0.3350\",\"low\":\"0.3050\",\"prev_close\":\"0.3198\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-15T11:15:46.522646Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:15:46.522698Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:15:46.522752Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:15:46.522799Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:15:46.524208Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:15:46.524361Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:15:46.524583Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:15:46.526106Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:15:46.526130Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:15:46.527482Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:15:46.527504Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:15:46.528254Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:15:46.528284Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:15:46.529134Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:15:46.529189Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:15:46.529374Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:15:46.530859Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:15:46.530883Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:15:46.531612Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:15:46.531632Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:16:19.011652Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:16:19.011705Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:16:19.011837Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:16:19.011886Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:16:19.014464Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:16:19.014624Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:16:19.014861Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:16:19.016504Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:16:19.016527Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:16:19.017302Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:16:19.017323Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:16:19.018052Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:16:19.018081Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:16:19.018858Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:16:19.019065Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:16:19.019234Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:16:19.023329Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:16:19.023351Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:16:19.024017Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:16:19.024039Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:21:34.863739Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:21:38.957984Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:21:44.028332Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:21:44.612125Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:21:46.857880Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:21:53.298090Z  INFO longport_wscli::client: heartbeat timeout
2025-06-15T11:50:27.740471Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:50:27.740564Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:50:27.740794Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:50:27.740884Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:50:27.743154Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:50:27.743280Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:50:27.743544Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:50:27.746228Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:50:27.746270Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:50:27.747259Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:50:27.747281Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:50:27.748187Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:50:27.748217Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:50:27.749051Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:50:27.749195Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:50:27.749377Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:50:27.750887Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:50:27.750909Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:50:27.751547Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:50:27.751556Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:50:31.704359Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"MP\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-15T11:50:31.965479Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [], "isError": Bool(false)}), error: None }
2025-06-15T11:50:35.676531Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"MP\"]}},\"jsonrpc\":\"2.0\",\"id\":9}"
2025-06-15T11:50:35.944654Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(9)), result: Some(Object {"content": Array [], "isError": Bool(false)}), error: None }
2025-06-15T11:51:01.911304Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"MP.US\"]}},\"jsonrpc\":\"2.0\",\"id\":10}"
2025-06-15T11:51:01.990048Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(10)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"MP.US\",\"last_done\":\"30.550\",\"prev_close\":\"29.200\",\"open\":\"29.840\",\"high\":\"30.780\",\"low\":\"28.355\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":25329263,\"turnover\":\"760096043.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"29.860\",\"timestamp\":\"2025-06-13T13:29:59Z\",\"volume\":459882,\"turnover\":\"13995608.909\",\"high\":\"31.860\",\"low\":\"29.400\",\"prev_close\":\"29.200\"},\"post_market_quote\":{\"last_done\":\"30.910\",\"timestamp\":\"2025-06-13T23:59:52Z\",\"volume\":2138511,\"turnover\":\"65347612.294\",\"high\":\"31.000\",\"low\":\"30.340\",\"prev_close\":\"30.550\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-15T11:51:28.237020Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"MP.US\"]}},\"jsonrpc\":\"2.0\",\"id\":11}"
2025-06-15T11:51:28.519985Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(11)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"MP.US\",\"name_cn\":\"\",\"name_en\":\"MP Materials Corp.\",\"name_hk\":\"\",\"exchange\":\"NYSE\",\"currency\":\"USD\",\"lot_size\":1,\"total_shares\":163456298,\"circulating_shares\":119914547,\"hk_shares\":0,\"eps\":\"-0.4002537730299019\",\"eps_ttm\":\"-0.6396878020570367\",\"bps\":\"6.3387646280842602\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"OPTION\",\"board\":\"Unknown\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-15T11:56:48.884221Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-15T11:56:48.884356Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-15T11:56:48.884538Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-15T11:56:48.884634Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:56:48.888086Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:56:48.888262Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-15T11:56:48.888614Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:56:48.891524Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-15T11:56:48.891564Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:56:48.892614Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-15T11:56:48.892682Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:56:48.893624Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-15T11:56:48.893661Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-15T11:56:48.894558Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-15T11:56:48.894870Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-15T11:56:48.895079Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-15T11:56:48.896730Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-15T11:56:48.896756Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-15T11:56:48.897622Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-15T11:56:48.897633Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-15T11:56:56.016827Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"quote\",\"arguments\":{\"symbols\":[\"AAPL.US\",\"MSFT.US\",\"AMZN.US\",\"GOOGL.US\",\"TSLA.US\",\"BRK.A.US\",\"NVDA.US\",\"META.US\",\"V.US\",\"JPM.US\",\"JNJ.US\",\"WMT.US\",\"PG.US\",\"MA.US\",\"HD.US\",\"DIS.US\",\"BAC.US\",\"PYPL.US\",\"NFLX.US\",\"ADBE.US\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-15T11:56:56.243561Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"AAPL.US\",\"last_done\":\"196.450\",\"prev_close\":\"199.200\",\"open\":\"199.730\",\"high\":\"200.370\",\"low\":\"195.700\",\"timestamp\":\"2025-06-13T20:00:01Z\",\"volume\":51447349,\"turnover\":\"10136983200.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"199.500\",\"timestamp\":\"2025-06-13T13:30:01Z\",\"volume\":718695,\"turnover\":\"143227630.066\",\"high\":\"200.200\",\"low\":\"196.530\",\"prev_close\":\"199.200\"},\"post_market_quote\":{\"last_done\":\"196.400\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":2993802,\"turnover\":\"588210555.761\",\"high\":\"196.600\",\"low\":\"196.060\",\"prev_close\":\"196.450\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"MSFT.US\",\"last_done\":\"474.960\",\"prev_close\":\"478.870\",\"open\":\"476.410\",\"high\":\"479.180\",\"low\":\"472.760\",\"timestamp\":\"2025-06-13T20:00:01Z\",\"volume\":16814456,\"turnover\":\"7997372502.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"475.980\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":135487,\"turnover\":\"64314804.400\",\"high\":\"477.200\",\"low\":\"472.710\",\"prev_close\":\"478.870\"},\"post_market_quote\":{\"last_done\":\"474.210\",\"timestamp\":\"2025-06-13T23:59:57Z\",\"volume\":990526,\"turnover\":\"470510351.516\",\"high\":\"476.188\",\"low\":\"473.310\",\"prev_close\":\"474.960\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"AMZN.US\",\"last_done\":\"212.100\",\"prev_close\":\"213.240\",\"open\":\"209.960\",\"high\":\"214.050\",\"low\":\"209.620\",\"timestamp\":\"2025-06-13T20:00:01Z\",\"volume\":29337763,\"turnover\":\"6217049128.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"209.730\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":436088,\"turnover\":\"91336991.802\",\"high\":\"210.590\",\"low\":\"208.050\",\"prev_close\":\"213.240\"},\"post_market_quote\":{\"last_done\":\"211.810\",\"timestamp\":\"2025-06-13T23:59:57Z\",\"volume\":1309799,\"turnover\":\"277775714.519\",\"high\":\"212.300\",\"low\":\"211.590\",\"prev_close\":\"212.100\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"GOOGL.US\",\"last_done\":\"174.670\",\"prev_close\":\"175.700\",\"open\":\"172.440\",\"high\":\"177.130\",\"low\":\"172.385\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":27663107,\"turnover\":\"4845387265.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"172.460\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":916655,\"turnover\":\"159993512.437\",\"high\":\"173.160\",\"low\":\"171.230\",\"prev_close\":\"175.700\"},\"post_market_quote\":{\"last_done\":\"174.550\",\"timestamp\":\"2025-06-13T23:59:49Z\",\"volume\":523920,\"turnover\":\"91502523.505\",\"high\":\"175.000\",\"low\":\"174.034\",\"prev_close\":\"174.670\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"TSLA.US\",\"last_done\":\"325.310\",\"prev_close\":\"319.110\",\"open\":\"313.970\",\"high\":\"332.990\",\"low\":\"313.300\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":128964279,\"turnover\":\"41734126083.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"313.840\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":1860230,\"turnover\":\"582939014.932\",\"high\":\"316.850\",\"low\":\"309.450\",\"prev_close\":\"319.110\"},\"post_market_quote\":{\"last_done\":\"326.920\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":1484102,\"turnover\":\"483126670.475\",\"high\":\"327.250\",\"low\":\"324.290\",\"prev_close\":\"325.310\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"BRK.A.US\",\"last_done\":\"731220.000\",\"prev_close\":\"735000.000\",\"open\":\"727532.071\",\"high\":\"736312.516\",\"low\":\"727532.071\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":395,\"turnover\":\"289107718.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-13T08:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"735000.000\"},\"post_market_quote\":{\"last_done\":\"0\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":0,\"turnover\":\"0\",\"high\":\"0\",\"low\":\"0\",\"prev_close\":\"731220.000\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"NVDA.US\",\"last_done\":\"141.970\",\"prev_close\":\"145.000\",\"open\":\"142.480\",\"high\":\"143.580\",\"low\":\"140.855\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":180820565,\"turnover\":\"25731181755.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"142.470\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":3246245,\"turnover\":\"463661024.412\",\"high\":\"143.470\",\"low\":\"141.730\",\"prev_close\":\"145.000\"},\"post_market_quote\":{\"last_done\":\"141.800\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":6207631,\"turnover\":\"880820572.486\",\"high\":\"142.130\",\"low\":\"141.519\",\"prev_close\":\"141.970\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"META.US\",\"last_done\":\"682.870\",\"prev_close\":\"693.360\",\"open\":\"687.950\",\"high\":\"694.570\",\"low\":\"681.010\",\"timestamp\":\"2025-06-13T20:00:01Z\",\"volume\":9274441,\"turnover\":\"6374632420.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"687.640\",\"timestamp\":\"2025-06-13T13:30:01Z\",\"volume\":101702,\"turnover\":\"69462138.107\",\"high\":\"688.748\",\"low\":\"679.710\",\"prev_close\":\"693.360\"},\"post_market_quote\":{\"last_done\":\"682.830\",\"timestamp\":\"2025-06-13T23:59:50Z\",\"volume\":493292,\"turnover\":\"336839899.165\",\"high\":\"684.450\",\"low\":\"681.460\",\"prev_close\":\"682.870\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"V.US\",\"last_done\":\"352.850\",\"prev_close\":\"371.400\",\"open\":\"361.505\",\"high\":\"363.010\",\"low\":\"345.000\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":14181686,\"turnover\":\"4991035707.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"360.445\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":180549,\"turnover\":\"66793537.434\",\"high\":\"368.240\",\"low\":\"357.430\",\"prev_close\":\"371.400\"},\"post_market_quote\":{\"last_done\":\"353.800\",\"timestamp\":\"2025-06-13T23:59:30Z\",\"volume\":271952,\"turnover\":\"95964444.665\",\"high\":\"354.600\",\"low\":\"352.850\",\"prev_close\":\"352.850\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"JPM.US\",\"last_done\":\"264.950\",\"prev_close\":\"268.240\",\"open\":\"265.080\",\"high\":\"267.020\",\"low\":\"262.710\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":7098265,\"turnover\":\"1880491369.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"265.710\",\"timestamp\":\"2025-06-13T13:29:32Z\",\"volume\":21699,\"turnover\":\"5746244.889\",\"high\":\"266.090\",\"low\":\"263.510\",\"prev_close\":\"268.240\"},\"post_market_quote\":{\"last_done\":\"265.099\",\"timestamp\":\"2025-06-13T23:59:29Z\",\"volume\":421320,\"turnover\":\"111628163.583\",\"high\":\"265.710\",\"low\":\"264.250\",\"prev_close\":\"264.950\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"JNJ.US\",\"last_done\":\"157.100\",\"prev_close\":\"156.660\",\"open\":\"155.970\",\"high\":\"157.670\",\"low\":\"155.970\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":6587849,\"turnover\":\"1035042953.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"156.300\",\"timestamp\":\"2025-06-13T13:30:01Z\",\"volume\":4943,\"turnover\":\"772932.749\",\"high\":\"156.960\",\"low\":\"155.360\",\"prev_close\":\"156.660\"},\"post_market_quote\":{\"last_done\":\"157.140\",\"timestamp\":\"2025-06-13T23:55:53Z\",\"volume\":459550,\"turnover\":\"72195288.279\",\"high\":\"157.500\",\"low\":\"155.600\",\"prev_close\":\"157.100\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"WMT.US\",\"last_done\":\"94.440\",\"prev_close\":\"94.830\",\"open\":\"94.520\",\"high\":\"95.320\",\"low\":\"94.005\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":18694739,\"turnover\":\"1768011838.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"94.650\",\"timestamp\":\"2025-06-13T13:29:58Z\",\"volume\":37087,\"turnover\":\"3496295.290\",\"high\":\"94.830\",\"low\":\"93.760\",\"prev_close\":\"94.830\"},\"post_market_quote\":{\"last_done\":\"94.510\",\"timestamp\":\"2025-06-13T23:59:51Z\",\"volume\":1511792,\"turnover\":\"142774973.175\",\"high\":\"95.000\",\"low\":\"94.300\",\"prev_close\":\"94.440\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PG.US\",\"last_done\":\"160.280\",\"prev_close\":\"163.180\",\"open\":\"162.765\",\"high\":\"163.030\",\"low\":\"159.910\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":7104547,\"turnover\":\"1142914058.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"162.610\",\"timestamp\":\"2025-06-13T13:28:41Z\",\"volume\":4145,\"turnover\":\"674419.235\",\"high\":\"163.210\",\"low\":\"161.879\",\"prev_close\":\"163.180\"},\"post_market_quote\":{\"last_done\":\"160.280\",\"timestamp\":\"2025-06-13T23:59:30Z\",\"volume\":1055442,\"turnover\":\"169166589.046\",\"high\":\"160.500\",\"low\":\"159.880\",\"prev_close\":\"160.280\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"MA.US\",\"last_done\":\"562.030\",\"prev_close\":\"589.280\",\"open\":\"572.860\",\"high\":\"575.240\",\"low\":\"552.510\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":5905376,\"turnover\":\"3315221642.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"573.680\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":6245,\"turnover\":\"3597211.625\",\"high\":\"583.380\",\"low\":\"572.000\",\"prev_close\":\"589.280\"},\"post_market_quote\":{\"last_done\":\"561.900\",\"timestamp\":\"2025-06-13T23:57:52Z\",\"volume\":151087,\"turnover\":\"84917644.628\",\"high\":\"565.000\",\"low\":\"560.500\",\"prev_close\":\"562.030\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"HD.US\",\"last_done\":\"354.660\",\"prev_close\":\"363.160\",\"open\":\"360.000\",\"high\":\"362.790\",\"low\":\"352.800\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":3364429,\"turnover\":\"1197783716.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"359.000\",\"timestamp\":\"2025-06-13T13:29:59Z\",\"volume\":1256,\"turnover\":\"453311.520\",\"high\":\"362.690\",\"low\":\"358.700\",\"prev_close\":\"363.160\"},\"post_market_quote\":{\"last_done\":\"354.950\",\"timestamp\":\"2025-06-13T23:58:42Z\",\"volume\":130786,\"turnover\":\"46384885.790\",\"high\":\"355.000\",\"low\":\"354.250\",\"prev_close\":\"354.660\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"DIS.US\",\"last_done\":\"117.940\",\"prev_close\":\"118.610\",\"open\":\"117.305\",\"high\":\"118.320\",\"low\":\"117.300\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":13204927,\"turnover\":\"1556505849.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"117.570\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":18600,\"turnover\":\"2181526.697\",\"high\":\"117.850\",\"low\":\"116.292\",\"prev_close\":\"118.610\"},\"post_market_quote\":{\"last_done\":\"117.800\",\"timestamp\":\"2025-06-13T23:59:59Z\",\"volume\":4799546,\"turnover\":\"566062949.815\",\"high\":\"118.490\",\"low\":\"117.500\",\"prev_close\":\"117.940\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"BAC.US\",\"last_done\":\"44.090\",\"prev_close\":\"44.620\",\"open\":\"43.995\",\"high\":\"44.460\",\"low\":\"43.665\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":43281740,\"turnover\":\"1908969935.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"44.060\",\"timestamp\":\"2025-06-13T13:30:01Z\",\"volume\":386451,\"turnover\":\"17205536.748\",\"high\":\"44.190\",\"low\":\"43.590\",\"prev_close\":\"44.620\"},\"post_market_quote\":{\"last_done\":\"44.090\",\"timestamp\":\"2025-06-13T23:59:34Z\",\"volume\":921607,\"turnover\":\"40633468.384\",\"high\":\"44.180\",\"low\":\"44.020\",\"prev_close\":\"44.090\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"PYPL.US\",\"last_done\":\"70.830\",\"prev_close\":\"74.810\",\"open\":\"73.300\",\"high\":\"74.215\",\"low\":\"70.531\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":16744374,\"turnover\":\"1195515078.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"73.430\",\"timestamp\":\"2025-06-13T13:30:01Z\",\"volume\":40441,\"turnover\":\"2951652.786\",\"high\":\"73.430\",\"low\":\"72.410\",\"prev_close\":\"74.810\"},\"post_market_quote\":{\"last_done\":\"70.915\",\"timestamp\":\"2025-06-13T23:59:52Z\",\"volume\":581413,\"turnover\":\"41202519.859\",\"high\":\"71.330\",\"low\":\"70.830\",\"prev_close\":\"70.830\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"NFLX.US\",\"last_done\":\"1212.150\",\"prev_close\":\"1215.030\",\"open\":\"1206.590\",\"high\":\"1220.620\",\"low\":\"1201.890\",\"timestamp\":\"2025-06-13T20:00:00Z\",\"volume\":2210253,\"turnover\":\"2679968159.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"1207.980\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":130700,\"turnover\":\"158723960.889\",\"high\":\"1210.239\",\"low\":\"1201.810\",\"prev_close\":\"1215.030\"},\"post_market_quote\":{\"last_done\":\"1210.000\",\"timestamp\":\"2025-06-13T23:59:56Z\",\"volume\":97254,\"turnover\":\"117882005.373\",\"high\":\"1215.320\",\"low\":\"1209.000\",\"prev_close\":\"1212.150\"},\"overnight_quote\":null}"), "type": String("text")}, Object {"text": String("{\"symbol\":\"ADBE.US\",\"last_done\":\"391.680\",\"prev_close\":\"413.680\",\"open\":\"392.500\",\"high\":\"399.850\",\"low\":\"383.750\",\"timestamp\":\"2025-06-13T20:00:01Z\",\"volume\":10629682,\"turnover\":\"4147679632.000\",\"trade_status\":\"Normal\",\"pre_market_quote\":{\"last_done\":\"392.500\",\"timestamp\":\"2025-06-13T13:30:00Z\",\"volume\":168319,\"turnover\":\"67031727.655\",\"high\":\"407.300\",\"low\":\"391.900\",\"prev_close\":\"413.680\"},\"post_market_quote\":{\"last_done\":\"391.000\",\"timestamp\":\"2025-06-13T23:59:53Z\",\"volume\":345174,\"turnover\":\"135186442.770\",\"high\":\"391.980\",\"low\":\"390.380\",\"prev_close\":\"391.680\"},\"overnight_quote\":null}"), "type": String("text")}], "isError": Bool(false)}), error: None }
