2025-06-19T14:47:17.054610Z  INFO longport_mcp: Starting MCP server with stdio transport
2025-06-19T14:47:17.054745Z  INFO poem_mcpserver::stdio: stdio server started
2025-06-19T14:47:17.054851Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":0}"
2025-06-19T14:47:17.054938Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(0)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-19T14:47:17.064007Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-19T14:47:17.064244Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":1}"
2025-06-19T14:47:17.064494Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(1)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-19T14:47:17.067948Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":2}"
2025-06-19T14:47:17.067993Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(2)), result: Some(Object {"resources": Array []}), error: None }
2025-06-19T14:47:17.069375Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":3}"
2025-06-19T14:47:17.069398Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(3)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-19T14:47:17.070268Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2025-03-26\",\"capabilities\":{},\"clientInfo\":{\"name\":\"mcp\",\"version\":\"0.1.0\"}},\"jsonrpc\":\"2.0\",\"id\":4}"
2025-06-19T14:47:17.070304Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(4)), result: Some(Object {"capabilities": Object {"prompts": Object {"listChanged": Bool(false)}, "resources": Object {"listChanged": Bool(false), "subscribe": Bool(false)}, "tools": Object {"listChanged": Bool(false)}}, "instructions": String("LongPort OpenAPI SDK."), "protocolVersion": String("2025-03-26"), "serverInfo": Object {"name": String("poem-mcpserver"), "version": String("0.1.0")}}), error: None }
2025-06-19T14:47:17.071374Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"notifications/initialized\",\"jsonrpc\":\"2.0\"}"
2025-06-19T14:47:17.071491Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/list\",\"jsonrpc\":\"2.0\",\"id\":5}"
2025-06-19T14:47:17.071675Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(5)), result: Some(Object {"tools": Array [Object {"description": String("Get current time."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("now_Request"), "type": String("object")}, "name": String("now")}, Object {"description": String("Get basic information of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"description": String("A list of security symbols. (e.g. [\"700.HK\", \"AAPL.US\", \"000001.SH\", \"D05.SG\"])"), "items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("static_info_Request"), "type": String("object")}, "name": String("static_info")}, Object {"description": String("Get the latest price of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbols": Object {"items": Object {"type": String("string")}, "type": String("array")}}, "required": Array [String("symbols")], "title": String("quote_Request"), "type": String("object")}, "name": String("quote")}, Object {"description": String("Get the latest depth of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("depth_Request"), "type": String("object")}, "name": String("depth")}, Object {"description": String("Get the latest trades of the securities."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("max 1000"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "symbol": Object {"type": String("string")}}, "required": Array [String("count"), String("symbol")], "title": String("trades_Request"), "type": String("object")}, "name": String("trades")}, Object {"description": String("Get the latest n candlesticks of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"count": Object {"description": String("last n candlesticks (max: 1000)"), "format": String("uint"), "minimum": Number(0.0), "type": String("integer")}, "forward_adjust": Object {"description": String("whether to adjust the historical data for splits, dividends, etc. (required)"), "type": String("boolean")}, "period": Object {"description": String("1m, 2m, 3m, 5m, 10m, 15m, 20m, 30m, 45m, 60m, 120m, 180m, 240m, day, week, month, quarter, year"), "type": String("string")}, "symbol": Object {"type": String("string")}, "trade_sessions": Object {"description": String("trade sessions (required) - intraday: regular trading hours - all: all trading hours (intraday, pre, post, overnight)"), "type": String("string")}}, "required": Array [String("count"), String("forward_adjust"), String("period"), String("symbol"), String("trade_sessions")], "title": String("candlesticks_Request"), "type": String("object")}, "name": String("candlesticks")}, Object {"description": String("Get the trading days between the specified dates.\n\nThe results include the `start_date` and `end_date`."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_date": Object {"description": String("End date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start_date": Object {"description": String("Start date of the trading days. (Format: \"yyyy-mm-dd\")"), "type": String("string")}}, "required": Array [String("end_date"), String("market"), String("start_date")], "title": String("trading_days_Request"), "type": String("object")}, "name": String("trading_days")}, Object {"description": String("Returns the real-time broker queue data of security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("broker_queue_Request"), "type": String("object")}, "name": String("broker_queue")}, Object {"description": String("Returns the participants information."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("broker_info_Request"), "type": String("object")}, "name": String("broker_info")}, Object {"description": String("Returns the option chain list of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("option_chain_list_Request"), "type": String("object")}, "name": String("option_chain_list")}, Object {"description": String("Returns the option chain information of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expiry_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "symbol": Object {"type": String("string")}}, "required": Array [String("expiry_date"), String("symbol")], "title": String("option_chain_info_Request"), "type": String("object")}, "name": String("option_chain_info")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_flow_Request"), "type": String("object")}, "name": String("capital_flow")}, Object {"description": String("Returns the capital distribution of the security."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("capital_distribution_Request"), "type": String("object")}, "name": String("capital_distribution")}, Object {"description": String("Returns the market temperature of the specified market."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}}, "required": Array [String("market")], "title": String("current_market_temperature_Request"), "type": String("object")}, "name": String("current_market_temperature")}, Object {"description": String("Returns the historical market temperature of the specified market.\n\nincludes the `start` and `end` dates."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}, "market": Object {"description": String("Market code. (e.g. \"HK\", \"US\", \"CN\", \"SG\")"), "type": String("string")}, "start": Object {"description": String("format: \"yyyy-mm-dd\""), "type": String("string")}}, "required": Array [String("end"), String("market"), String("start")], "title": String("history_market_temperature_Request"), "type": String("object")}, "name": String("history_market_temperature")}, Object {"description": String("Get the account balance."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("account_balance_Request"), "type": String("object")}, "name": String("account_balance")}, Object {"description": String("Returns the stock positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("stock_positions_Request"), "type": String("object")}, "name": String("stock_positions")}, Object {"description": String("Returns the fund positions."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("fund_positions_Request"), "type": String("object")}, "name": String("fund_positions")}, Object {"description": String("Returns the initial margin ratio, maintain the margin ratio and\nstrengthen the margin ratio of stocks."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"symbol": Object {"type": String("string")}}, "required": Array [String("symbol")], "title": String("magin_ratio_Request"), "type": String("object")}, "name": String("magin_ratio")}, Object {"description": String("Submit an order."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"expire_date": Object {"description": String("format: \"yyyy-mm-dd\""), "type": Array [String("string"), String("null")]}, "limit_offset": Object {"description": String("for TSLPAMT, TSLPPCT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "order_type": Object {"description": String("Order type LO:\tLimit Order ELO: Enhanced Limit Order MO: Market Order AO: At-auction Order ALO: At-auction Limit Order ODD: Odd Lots Order LIT: Limit If Touched MIT: Market If Touched TSLPAMT: Trailing Limit If Touched (Trailing Amount) TSLPPCT: Trailing Limit If Touched (Trailing Percent) SLO: Special Limit Order. Not Support Replace Order."), "type": String("string")}, "outside_rth": Object {"description": String("- RTH_ONLY: regular trading hour only - ANY_TIME: any time - OVERNIGHT: overnight"), "type": Array [String("string"), String("null")]}, "side": Object {"description": String("Side of the order (Buy or Sell)"), "type": String("string")}, "submitted_price": Object {"description": String("for LO, ELO, ALO, ODD, LIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "submitted_quantity": Object {"pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": String("string")}, "symbol": Object {"type": String("string")}, "time_in_force": Object {"description": String("- Day: Day Order - GTC: Good Till Cancel - GTD: Good Till Date"), "type": String("string")}, "trailing_amount": Object {"description": String("for TSLPAMT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trailing_percent": Object {"description": String("for TSLPPCT (0-1)"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}, "trigger_price": Object {"description": String("for LIT, MIT"), "pattern": String("^-?[0-9]+(\\.[0-9]+)?$"), "type": Array [String("string"), String("null")]}}, "required": Array [String("order_type"), String("side"), String("submitted_quantity"), String("symbol"), String("time_in_force")], "title": String("submit_order_Request"), "type": String("object")}, "name": String("submit_order")}, Object {"description": String(""), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("cancel_order_Request"), "type": String("object")}, "name": String("cancel_order")}, Object {"description": String("Get the order detail."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"order_id": Object {"type": String("string")}}, "required": Array [String("order_id")], "title": String("order_detail_Request"), "type": String("object")}, "name": String("order_detail")}, Object {"description": String("Get the current account's orders for the day."), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {}, "title": String("today_orders_Request"), "type": String("object")}, "name": String("today_orders")}, Object {"description": String("Get the historical orders of the current account.\n\ndoes not include today's orders"), "inputSchema": Object {"$schema": String("http://json-schema.org/draft-07/schema#"), "properties": Object {"end_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "start_at": Object {"description": String("format: RFC3339"), "type": String("string")}, "symbol": Object {"description": String("if not provided, default to all symbols"), "type": Array [String("string"), String("null")]}}, "required": Array [String("end_at"), String("start_at")], "title": String("history_orders_Request"), "type": String("object")}, "name": String("history_orders")}]}), error: None }
2025-06-19T14:47:17.073815Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"resources/list\",\"jsonrpc\":\"2.0\",\"id\":6}"
2025-06-19T14:47:17.073837Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(6)), result: Some(Object {"resources": Array []}), error: None }
2025-06-19T14:47:17.074498Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"prompts/list\",\"jsonrpc\":\"2.0\",\"id\":7}"
2025-06-19T14:47:17.074518Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(7)), result: Some(Object {"prompts": Array []}), error: None }
2025-06-19T14:47:22.087047Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"static_info\",\"arguments\":{\"symbols\":[\"600221.SH\"]}},\"jsonrpc\":\"2.0\",\"id\":8}"
2025-06-19T14:47:22.102551Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(8)), result: Some(Object {"content": Array [Object {"text": String("{\"symbol\":\"600221.SH\",\"name_cn\":\"海航控股\",\"name_en\":\"Hainan Airlines Holding\",\"name_hk\":\"海航控股\",\"exchange\":\"SSE\",\"currency\":\"CNY\",\"lot_size\":100,\"total_shares\":43215632535,\"circulating_shares\":32872676656,\"hk_shares\":0,\"eps\":\"-0.0213167306819798\",\"eps_ttm\":\"-0.0309024749069313\",\"bps\":\"0.0579286904564568\",\"dividend_yield\":\"0\",\"stock_derivatives\":\"\",\"board\":\"SHMainConnect\"}"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-19T14:47:26.847613Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":10,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600221.SH\",\"trade_sessions\":\"regular\"}},\"jsonrpc\":\"2.0\",\"id\":9}"
2025-06-19T14:47:26.847719Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(9)), result: Some(Object {"content": Array [Object {"text": String("parse field: market: invalid trade_sessions"), "type": String("text")}], "isError": Bool(true)}), error: None }
2025-06-19T14:47:31.708624Z  INFO poem_mcpserver::stdio: received request request="{\"method\":\"tools/call\",\"params\":{\"name\":\"candlesticks\",\"arguments\":{\"count\":10,\"forward_adjust\":true,\"period\":\"day\",\"symbol\":\"600221.SH\",\"trade_sessions\":\"intraday\"}},\"jsonrpc\":\"2.0\",\"id\":10}"
2025-06-19T14:47:31.758962Z  INFO poem_mcpserver::stdio: sending response response=Response { jsonrpc: "2.0", id: Some(Int(10)), result: Some(Object {"content": Array [Object {"text": String("[{\"close\":\"1.35\",\"open\":\"1.34\",\"low\":\"1.33\",\"high\":\"1.37\",\"volume\":3464015,\"turnover\":\"468050642.00\",\"timestamp\":\"2025-06-05T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.38\",\"open\":\"1.41\",\"low\":\"1.38\",\"high\":\"1.45\",\"volume\":7253442,\"turnover\":\"1023680419.00\",\"timestamp\":\"2025-06-08T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.38\",\"open\":\"1.37\",\"low\":\"1.35\",\"high\":\"1.39\",\"volume\":4284897,\"turnover\":\"587601893.00\",\"timestamp\":\"2025-06-09T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.37\",\"open\":\"1.37\",\"low\":\"1.36\",\"high\":\"1.38\",\"volume\":1604106,\"turnover\":\"219985348.00\",\"timestamp\":\"2025-06-10T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.35\",\"open\":\"1.37\",\"low\":\"1.35\",\"high\":\"1.37\",\"volume\":1584034,\"turnover\":\"214477117.00\",\"timestamp\":\"2025-06-11T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.32\",\"open\":\"1.34\",\"low\":\"1.32\",\"high\":\"1.35\",\"volume\":4243485,\"turnover\":\"565299195.00\",\"timestamp\":\"2025-06-12T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.32\",\"open\":\"1.32\",\"low\":\"1.32\",\"high\":\"1.33\",\"volume\":1119599,\"turnover\":\"148309555.00\",\"timestamp\":\"2025-06-15T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.33\",\"open\":\"1.32\",\"low\":\"1.32\",\"high\":\"1.33\",\"volume\":1069310,\"turnover\":\"141724898.00\",\"timestamp\":\"2025-06-16T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.32\",\"open\":\"1.32\",\"low\":\"1.32\",\"high\":\"1.33\",\"volume\":1129167,\"turnover\":\"149366110.00\",\"timestamp\":\"2025-06-17T16:00:00Z\",\"trade_session\":\"Intraday\"},{\"close\":\"1.30\",\"open\":\"1.32\",\"low\":\"1.30\",\"high\":\"1.33\",\"volume\":2073513,\"turnover\":\"271287230.00\",\"timestamp\":\"2025-06-18T16:00:00Z\",\"trade_session\":\"Intraday\"}]"), "type": String("text")}], "isError": Bool(false)}), error: None }
2025-06-19T14:49:42.328831Z  INFO longport_wscli::client: heartbeat timeout
